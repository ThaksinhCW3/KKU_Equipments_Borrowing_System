version: "3.9"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: eq_borrow_sys
    working_dir: /var/www/html
    command: sh -c "composer install && php artisan key:generate && php artisan serve --host=0.0.0.0 --port=8000"
    volumes:
      - .:/var/www/html
    ports:
      - "8000:8000"
    depends_on:
      - mysql
      - redis
    networks:
      - borrow_network

  queue:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: borrow_queue
    working_dir: /var/www/html
    command: sh -c "composer install && php artisan queue:work --sleep=3 --tries=3 --verbose"
    volumes:
      - .:/var/www/html
    depends_on:
      - redis
      - mysql
    networks:
      - borrow_network

  vite:
    image: node:20-alpine
    container_name: vite
    working_dir: /var/www/html
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0 --port=5173"
    volumes:
      - .:/var/www/html
      - ./node_modules:/var/www/html/node_modules
    ports:
      - "5173:5173"
    depends_on:
      - app
    networks:
      - borrow_network

  mysql:
    image: mysql:8.0
    container_name: borrow_mysqldb
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: db_kku_borrow_sys
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - borrow_network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: borrow_pma
    restart: always
    ports:
      - "8080:80"
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
    depends_on:
      - mysql
    networks:
      - borrow_network

  redis:
    image: redis:7.2-alpine
    container_name: borrow_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - borrow_network

volumes:
  mysql_data:
  redis_data:

networks:
  borrow_network:
    driver: bridge